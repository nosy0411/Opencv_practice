이번 강좌에서는 여러가지 값을 조절할 수 있는 트랙바 활용 방법에 대해 알아보도록 합니다.

트랙바를 활용하기 위해서는 아래의 2가지 함수를 이용합니다.

cv2.createTrackbar(trackbarname, windowname, start, end, onChange): 트랙바를 지정된 윈도에 생성하는 함수
trackbarname: 트랙바 이름
windowname: 트랙바가 생성될 윈도 이름
start: 트랙바 시작 값
end: 트랙바 끝 값
onChange: 트랙바 이벤트 발생시 수행되는 콜백 함수
?

cv2.getTrackbarPos(trackbarname, windowname): 트랙바의 현재 위치를 리턴하는 함수
trackbarname: 트랙바 이름
windowname: 트랙바가 생성된 윈도 이름



우리가 만들어 볼 프로그램의 기능은 아래와 같습니다.

B, G, R 값을 설정할 수 있는 트랙바가 있음
On/Off 스위치가 있어 On일 경우 트랙바를 이용한 설정값이 유효하게 됨
트랙바로 설정된 B, G, R 값에 따른 색상이 화면에 표시됨
ESC 키를 누르면 프로그램이 종료됨


>>> def onChange(x):

pass




트랙바 이벤트를 처리할 콜백 함수입니다. 우리의 프로그램에서는 트랙바 이벤트가 발생할 때 처리할 일이 아무것도 없으므로 그냥 pass 입니다.







>>> img = np.zeros((200, 512, 3), np.uint8)

>>> cv2.namedWindow('color_palette')




200 x 512 크기의 검정색 그림판을 생성하고, 'color_palette'라는 이름의 윈도를 생성합니다.







>>> cv2.createTrackbar('B', 'color_palette', 0, 255, onChange)

>>> cv2.createTrackbar('G', 'color_palette', 0, 255, onChange)

>>> cv2.createTrackbar('R', 'color_palette', 0, 255, onChange)

>>> switch = '0 : OFF \n1: ON'

>>> cv2.createTrackbar(switch, 'color_palette', 0, 1, onChange)




'color_palette' 윈도에 0~255까지 값으로 변경 가능한 트랙바 B, G, R을 생성합니다. 추가적으로 On/Off 스위치 역할을 할 트랙바를 생성합니다.







>>> b = cv2.getTrackbarPos('B', 'color_palette')

>>> g = cv2.getTrackbarPos('G', 'color_palette')

>>> r = cv2.getTrackbarPos('R', 'color_palette')

>>> s = cv2.getTrackbarPos(switch, 'color_palette')




B, G, R, On/Off 의 트랙바 현재 값을 b, g, r, s 로 합니다.







>>> if s == 0:

img[:] = 0

       else:

img[:] = [b, g, r]




스위치가 Off 이면 200 x 512 크기의 그림판 색상을 검정색으로 하고, 스위치가 On이면 트랙바에서 조절한 b, g, r 값으로 모두 채웁니다.

