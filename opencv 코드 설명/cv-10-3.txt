global thresholding 방법에서 문턱값으로 우리가 정한 임의의 값을 사용했습니다. 그런데 어떤 이미지에 적용되어 가장 좋은 결과를 내놓게될 문턱값은 어떻게 얻을 수 있을까요? 정답은 시행착오를 거치는 방법입니다.




만약 이미지 히스토그램이 두개의 봉우리를 가지는 bimodal 이미지라고 하면 이 이미지에 대한 문턱값으로 두 봉우리 사이의 값을 취하면 가장 좋은 결과를 얻을 수 있습니다.




Otsu Binarization은 이미지 히스토그램을 분석한 후 중간값을 취하여 thresholding 합니다.



>>> ret, thr2 = cv2.threshold(img, 0, 255, cv2.THRESH_BINARY+cv2.THRESH_OTSU)




Otsu Binarization을 적용하는 함수는 따로 없고, cv2.threshold() 함수에 cv2.THRESH_OTSU 플래그 값을 thresholding 플래그에 더하고 문턱값으로 0을 전달해주면 됩니다. 이렇게 하면 cv2.threshold() 함수는 적절한 문턱값을 계산한 후 이를 적용한 결과를 리턴합니다. 




cv2.theshold() 함수가 리턴한 ret, thr2는 각각 Otsu binarization 알고리즘으로 계산된 문턱값과 이 문턱값을 적용한 결과 이미지입니다.







>>> blur = cv2.GaussianBlur(img, (5, 5), 0)




Blur 함수는 차후에 자세하게 다룰 예정이므로, 이 강좌에서는 설명을 생략합니다.







>>> plt.subplot(3, 3, i*3+1), plt.imshow(images[i*3], 'gray')

       ......

?

결과를 화면에 디스플레이하기 위해 matplotlib을 이용했습니다. 


Gaussian blur를 적용하면 확실한 봉우리를 만들고 여기에 Otsu 알고리즘을 적용하여 문턱값을 구한 후 thresholding을 적용하면 보다 나은 노이즈 제거를 보임을 알 수 있습니다.




Thresholding 기법과 blur 필터를 활용하면 이미지 노이즈 제거에 효율적으로 적용할 수 있네요~


