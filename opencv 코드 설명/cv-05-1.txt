이번 강좌는 마우스를 활용해서 그림을 그리는 방법에 대해 살펴보도록 하겠습니다. 

OpenCV는 마우스 이벤트를 처리하는 다양한 함수를 제공하고 있는데요, 이번 강좌에서는 cv2.setMouseCallback() 함수를 이용해서 마우스 이벤트 처리를 할 예정입니다.




우리가 구현할 코드는 아래의 기능을 가지고 있습니다.

512 x 512 크기의 검정색 그림판 위에 마우스를 더블클릭하면 그곳에 반지름이 50 pixel인 원을 그림
원을 채우는 색상은 무작위로 선택됨
ESC 키를 누르면 프로그램을 종료함


>>> from random import shuffle




무작위 색상 값을 추출하기 위해 shuffle() 함수를 이용해서 리스트를 무작위로 섞을 예정입니다.







>>> b = [i for i in range(256)]

>>> g = [i for i in range(256)]

>>> r = [i for i in range(256)]




BGR 색상값을 위해 사용될 0~255 를 멤버로 하는 리스트를 생성합니다.







>>> def onMouse(event, x, y, flags, param):

if event == cv2.EVENT_LBUTTONDBLCLK:

suffle(b), shuffle(g), shuffle(r)

cv2.circle(param, (x,y), 50, (b[0], g[0], r[0]), -1)




마우스 이벤트를 처리할 콜백 함수입니다. 이 함수는 cv2.setMouseCallBack() 함수의 인자로 지정되어 호출됩니다. 

콜백 함수 onMouse() 의 인자는 아래와 같습니다. 

event: 마우스 이벤트
x, y: 마우스 이벤트가 일어난 위치
flags: 플래그 (여기서는 사용하지 않음)
param: cv2.setMouseCallback() 함수에서 전달받은 사용자 데이터. 우리의 코드에서는 img가 전달됨


마우스 이벤트 cv2.EVENT_LBUTTONDBLCLK 는 마우스 왼쪽 버튼으로 더블클릭 할때 발생하는 이벤트입니다.
이 이벤트가 발생하면, 0~255 값을 가지는 리스트 b, g, r을 무작위로 섞은 후, 각각의 리스트의 첫번째 멤버를 값으로 하는 색상으로 반지름 50인 원을 그림판에 그리게 됩니다.




>>> cv2.namedWindow('paint')
>>> cv2.setMouseCallback('paint', onMouse, param=img)


'paint'로 이름 붙여진 윈도상에서 발생하는 마우스 이벤트를 처리하기 위한 콜백 함수를 설정합니다. 콜백 함수는 onMouse()이고, 콜백함수로 전달할 사용자 데이터는 img 입니다.



그러면 좀 더 발전된 형태의 그림판을 만들어 보도록 하겠습니다.

512 x 512 크기의 검정색 그림판에 직사각형, 원을 그릴 수 있음
마우스 왼쪽 버튼을 누르고 움직이면 직사각형이 그려지고 누르고 있던 마우스 버튼을 떼면 직사각형이 완성됨
마우스 왼쪽 버튼을 누르고 움직이면 원이 그려지고 누르고 있던 마우스 버튼을 떼면 원이 완성됨
마우스 왼쪽 버튼을 누른 지점이 원의 중심이 됨
직사각형, 원의 색상은 무작위로 선택됨
키보드 'm'으로 직사각형 그리기, 원 그리기가 토글됨
ESC 키로 프로그램을 종료함


>>> import math




마우스 왼쪽 버튼을 누른 지점과 마우스 왼쪽 버튼을 뗀 지점간 거리를 재는데 필요한 sqrt() 함수를 사용하기 위해 math 패키지를 import 합니다.







>>> mode, drawing = True, False

>>> ix, iy = -1, -1 




mode 변수는 직사각형, 원 그리기를 토글하기 위한 플래그로 사용될 것이고, drawing 변수는 마우스 왼쪽 버튼을 누르고 움직이면 도형을 그리고, 마우스 왼쪽 버튼을 떼고 움직일 때 도형이 안그려지도록 하는 플래그입니다.




ix, iy는 마우스 왼쪽 버튼을 누른 지점으로 활용될 변수입니다.







>>> global ix,iy,drawing,mode, B, G, R




ix, iy, drawing, mode, B, G, R 은 전역 변수로 선언된 것을 사용한다는 의미입니다.







나머지 부분은 마우스 이벤트 종류를 제외하고는 첫번째 예제에서 처리한 것과 비슷합니다. 코드 자체를 자세하게 설명하는 것은 여러분들이 로직을 구성함에 있어 별 도움이 안되므로 이 코드를 훝어 보시고 여러분 스스로 응용하여 프로그래밍을 하시면 실력 향상에 도움이 됩니다.

