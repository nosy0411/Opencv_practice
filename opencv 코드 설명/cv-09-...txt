이번 강좌에서 다루어볼 내용은 아래와 같습니다.




BGR 색공간을 Gray로 변경하거나, BGR 색공간을 HSV로 변경하는 방법
비디오 프레임에서 특정한 색만 추출하여 추적하는 방법 배우기
 

위 두 주제를 위해 우리가 다룰 OpenCV 함수는 cv2.cvtColor(), cv2.inRange() 함수 입니다.







색공간 변경하기

OpenCV는 150가지 이상의 색공간 변경 메쏘드를 제공하고 있습니다. 하지만 우리는 가장 많이 사용되는 BGR - GRAY, BGR - HSV 색공간 변경 방법만 다루어 보도록 하겠습니다.




BGR은 Blue, Green, Red 값으로 하나의 색을 결정하는 것이죠. HSV는 Hue(색상), Saturation(채도), Value(진하기)로 색을 결정합니다.




아래 그림은 HSV를 표현하는 원기둥 모형입니다. 

원주 방향 각도로 Hue의 값을, 원의 중심에서 바깥으로 Saturation 값을 0~100%, 원기둥 바닥에서 위쪽으로 Value 값을 0~100%로 표현합니다. 여기서 진하기는 흰색이나 빨간색 등을 100%로 하고, 검정색을 더해감에 따라 진하기가 희석이 되며, 완전한 검정색은 0%입니다.


OpenCV에서는 Hue의 범위를 [0, 179], Saturation과 Value의 범위를 [0, 255]로 정의하고 있습니다.

>>> blue = np.uint8([[[255, 0, 0]]])




Blue 픽셀 1개에 해당하는 numpy array를 생성합니다. Green, Red에 대해서도 동일한 방법으로 생성합니다.







>>> hsv_blue = cv2.cvtColor(blue, cv2.COLOR_BGR2HSV)




BGR 색공간으로 생성한 Blue를 HSV 값으로 전환한 것을 hsv_blue에 담습니다. Green, Red에 대해서도 동일한 방법으로 전환합니다.




위 코드를 실행한 결과를 보면 Blue(255, 0, 0), Green(0, 255, 0), Red(0, 0, 255)의 HSV 값은 각각 아래와 같이 출력됩니다.

HSV for Blue: (120, 255, 255)
HSV for Green: (60, 255, 255)
HSV for Red: (0, 255, 255) 



위에서 설명한 HSV 원기둥에 매핑하여 생각해보면, Red가 H값이 0으로 Hue의 기준점이 되는 것을 알 수 있습니다. Saturation(채도)와Value(진하기) 모두 255이므로 100% 입니다.







이를 응용하여 웹캠으로 전송되는 영상을 아래와 같은 기능을 수행하는 응용 프로그램을 만들어 보죠~




웹캠으로 전송되는 비디오 영상을 분석하여 Blue, Green, Red 색상을 가진 물체만 따로 보이도록 함
프로그램은 총 4개의 화면으로 구성
오리지널 비디오 화면
Blue 색상을 가진 물체만 보이는 화면
Green 색상을 가진 물체만 보이는 화면
Red 색상을 가진 물체만 보이는 화면



프로그램 코드를 먼저 보기 전에 색상에 대해 한번 생각해보죠~

파란색을 생각해보면, 바다처럼 푸른 청색, 하늘색, 좀 우울하고 어두운 청색 등으로 그 범위가 있습니다.

따라서 우리의 프로그램도 적절하게 범위를 설정하도록 합니다.




HSV 색공간 Blue(120 ,255, 255), Green(60, 255, 255), Red(0, 255, 255) 기준으로 아래의 범위를 적용토록 하겠습니다.

(110, 100, 100) ~ (130, 255, 255) 범위는 Blue로 판단
(50, 100, 100) ~ (70, 255, 255) 범위는 Green으로 판단
(-10, 100, 100) ~ (10, 255, 255) 범위는 Red로 판단



위 범위를 좁히면 B, G, R을 보다 까다롭게 추출하는 것이고, 범위를 넓히면 그 반대입니다.

>>> hsv = cv2.cvtColor(frame, cv2.COLOR_BGR2HSV)




웹캠에서 전송되는 비디오 프레임을 HSV 색공간으로 변경합니다.







>>> mask_blue = cv2.inRange(hsv, lower_blue, upper_blue)




cv2.inRange() 함수는 소스인 hsv의 모든 값을 lower_blue, upper_blue로 지정한 범위에 있는지 체크한 후, 범위에 해당하는 부분은 그 값 그대로, 나머지 부분은 0으로 채워서 결과값을 반환합니다.




즉 위 코드는 hsv에서 lower_blue와 uppler_blue 사이에 해당하는 값은 그대로 두고, 나머지 부분은 0으로 채워서 mask_blue에 전달합니다. 따라서, 우리가 정의한 Blue 범위 이외는 모두 검정색으로 처리된 후 값을 넘겨주게 됩니다. 

