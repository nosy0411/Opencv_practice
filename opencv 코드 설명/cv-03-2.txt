>>> fps = 20.0

>>> width = int(cap.get(3))

>>> height = int(cap.get(4))




비디오 저장을 위해 초당 프레임수를 20.0 으로 지정하고, 원본 크기 그대로 width와 heigth를 지정합니다.







>>> fcc = cv2.VideoWriter_fourcc('D', 'I', 'V', 'X')




DIVX 코덱을 적용하기 위해, cv2.VideoWriter_fourcc() 함수의 인자로 'D', 'I', 'V', 'X' 를 적용했습니다. 적용 가능한 코덱은 아래와 같습니다.

DIVX, XVID, MJPG, X264, WMV1, WMV2



X264 코덱을 적용하려면, ('X', '2', '6', '4')로 하시면 되겠죠~







>>> out = cv2.VideoWriter('mycam.avi', fcc, fps, (width, height))




비디오 저장을 위한 객체를 생성합니다.







>>> cv2.imshow('frame', frame)

>>> out.write(frame)




비디오 프레임을 제대로 읽었다면 cv2.imshow() 함수로 화면에 해당 프레임을 디스플레이 하고, out.write() 함수로 'mycam.avi'에 프레임을 저장합니다.







>>> cap.release()

>>> out.release()

>>> cv2.destroyAllWindows()




ESC 키를 누르면 무한 루프를 빠져나오고 마무리한 후 프로그램을 종료합니다.




참고로 위 코드에서 frame을 읽은 후 아래의 코드를 적용하면 재생되는 화면이 거꾸로 보입니다. 




>>> frame = cv2.flip(frame, 0)




이 코드를 적용하여 저장되는 비디오 또한 거꾸로 된 비디오겠지요.

